{
    "identifier": "remove_invalid_parentheses",
    "prompts": [
        {
            "prompt_id": "30",
            "prompt": "Remove the minimum number of invalid parentheses in order to make the input string valid. Return all possible results.",
            "sample_inputs_outputs": [
                {
                    "input": {
                        "s": "(a)())()"
                    },
                    "expected_output": ["[\"(a)()()\", \"(a())()\"]"]
                }
            ]
        }
    ],
    "function_prototype": {
        "function_name": "remove_invalid",
        "parameters": [
            {
                "name": "s",
                "type": "str"
            }
        ],
        "return_values": [
            {
                "type": "List[str]"
            }
        ]
    },
    "correctness_test_suite": [
        {
            "input": {
                "s": "(a)())()"
            },
            "expected_output": ["[\"(a)()()\", \"(a())()\"]"]
        },
        {
            "input": {
                "s": "()())()"
            },
            "expected_output": ["[\"()()()\", \"(())()\"]"]
        },
        {
            "input": {
                "s": "(("
            },
            "expected_output": ["[\"\"]"]
        }
    ],
    "optimal_solution": "def remove_invalid(s: str) -> list[str]:\n    def is_valid(string):\n        count = 0\n        for char in string:\n            if char == '(':\n                count += 1\n            elif char == ')':\n                count -= 1\n            if count < 0:\n                return False\n        return count == 0\n\n    level = {s}\n    while True:\n        valid = list(filter(is_valid, level))\n        if valid:\n            return valid\n        level = {string[:i] + string[i+1:] for string in level for i in range(len(string))}"
}