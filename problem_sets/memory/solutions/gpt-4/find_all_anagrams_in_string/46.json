{
    "problem_identifier": "find_all_anagrams_in_string",
    "model_identifier": "gpt-4",
    "prompt_identifier": "46",
    "solution_code": "from typing import List\nfrom collections import Counter\n\ndef find_anagrams(s: str, p: str) -> List[int]:\n    # Edge cases\n    if len(s) < len(p) or len(s) == 0 or len(p) == 0:\n        return []\n    \n    p_counter = Counter(p)\n    s_counter = Counter(s[:len(p)-1])    \n    result = []\n\n    for i in range(len(p)-1, len(s)):\n        # include a new char in the window\n        s_counter[s[i]] += 1   \n        if s_counter == p_counter:\n            result.append(i-len(p)+1)  # append the starting index\n        # decrease the count of oldest char in the window\n        s_counter[s[i-len(p)+1]] -= 1\n        if s_counter[s[i-len(p)+1]] == 0:\n            del s_counter[s[i-len(p)+1]]  # remove the count if it is 0\n            \n    return result",
    "feedback": null
}