{
    "problem_identifier": "max_len_repeated_subarray",
    "model_identifier": "gpt-4",
    "prompt_identifier": "29",
    "solution_code": "def findLength(A, B):\n\n    if not A or not B:\n        return 0\n\n    n = len(A)\n    m = len(B)\n    \n    # dp[i][j] will store the max length of common subarray in A[0...i] and B[0...j]\n    dp = [[0] * (m+1) for _ in range(n+1)]\n    max_length = 0\n\n    for i in range(n-1, -1, -1):\n        for j in range(m-1, -1, -1):\n            if A[i] == B[j]:\n                dp[i][j] = dp[i+1][j+1] + 1\n            max_length = max(max_length, dp[i][j])\n\n    return max_length",
    "feedback": null
}