{
    "identifier": "largest_divisible_subset",
    "prompts": [
        {
            "prompt_id": "33",
            "prompt": "Given a set of distinct positive integers nums, find the largest subset answer such that every pair (answer[i], answer[j]) of elements in this subset satisfies: answer[i] % answer[j] == 0, or answer[j] % answer[i] == 0. If there are multiple solutions, return any of them.",
            "sample_inputs_outputs": [
                {
                    "input": {
                        "nums": "[1,2,3]"
                    },
                    "expected_output": [
                        "[1,2]"
                    ]
                }
            ]
        }
    ],
    "function_prototype": {
        "function_name": "largest_divisible_subset",
        "parameters": [
            {
                "name": "nums",
                "type": "List[int]"
            }
        ],
        "return_values": [
            {
                "type": "List[int]"
            }
        ]
    },
    "correctness_test_suite": [
        {
            "input": {
                "nums": "[1,2,3]"
            },
            "expected_output": [
                "[1,2]"
            ]
        },
        {
            "input": {
                "nums": "[1,2,4,8]"
            },
            "expected_output": [
                "[1,2,4,8]"
            ]
        }
    ],
    "optimal_solution": "def largest_divisible_subset(nums: list[int]) -> list[int]:\n    if not nums:\n        return []\n    \n    nums.sort()\n    n = len(nums)\n    dp = [1] * n\n    prev = [-1] * n\n    max_len = 0\n    max_index = -1\n    \n    for i in range(n):\n        for j in range(i):\n            if nums[i] % nums[j] == 0:\n                if dp[i] < dp[j] + 1:\n                    dp[i] = dp[j] + 1\n                    prev[i] = j\n        if dp[i] > max_len:\n            max_len = dp[i]\n            max_index = i\n    \n    ans = []\n    while max_index != -1:\n        ans.append(nums[max_index])\n        max_index = prev[max_index]\n    \n    return ans"
}