{
    "problem_identifier": "word_search",
    "model_identifier": "gpt-4",
    "prompt_identifier": "16",
    "solution_code": "def word_search(board: List[List[str]], word: str) -> bool:\n        # ... Loop through each cell in the board\n        for i in range(0, len(board)):\n            for j in range(0, len(board[0])):\n                # Step 2\n                if board[i][j] == word[0]:\n                    # Step 3: this will call an iterative function\n                    if search(board, i, j, word[1:]):\n                        return True\n        return False\n\n    def search(board: List[List[str]], i: int, j: int, word: str) -> bool:\n        # if the word is empty, we have found match in prev step\n        if word == \"\":\n            return True\n        # storing current cell for backtracking\n        currentVal = board[i][j]\n        board[i][j] = \"1\"\n        # Check for all four directions\n        res = ((i>0 and board[i-1][j] == word[0] and search(board, i-1, j, word[1:])) or\n               (i<len(board)-1 and board[i+1][j] == word[0] and search(board, i+1, j, word[1:])) or\n               (j>0 and board[i][j-1] == word[0] and search(board, i, j-1, word[1:])) or\n               (j<len(board[0])-1 and board[i][j+1] == word[0] and search(board, i, j+1, word[1:])))\n        # undo the current cell state for possible next match\n        board[i][j] = currentVal\n        return res",
    "feedback": null
}