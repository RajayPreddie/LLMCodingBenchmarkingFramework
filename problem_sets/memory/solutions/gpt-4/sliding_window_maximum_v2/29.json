{
    "problem_identifier": "sliding_window_maximum_v2",
    "model_identifier": "gpt-4",
    "prompt_identifier": "29",
    "solution_code": "from collections import deque\n\ndef max_sliding_window(nums, k):\n    n = len(nums)\n    if n * k == 0:\n        return []\n    if k == 1:\n        return nums\n        \n    def clean_deque(i):\n        if i - k + 1 > deq[0]:\n            deq.popleft()\n        while deq and nums[i] > nums[deq[-1]]:\n            deq.pop()\n            \n    deq = deque()\n    ans = []\n    \n    max_idx = 0\n    for i in range(k):\n        clean_deque(i)\n        deq.append(i)\n        if nums[i] > nums[max_idx]:\n            max_idx = i\n    ans.append(nums[max_idx])\n    \n    for i in range(k, n):\n        clean_deque(i)\n        deq.append(i)\n        ans.append(nums[deq[0]])\n        \n    return ans",
    "feedback": null
}