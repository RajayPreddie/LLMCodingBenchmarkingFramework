{
    "identifier": "clone_graph",
    "prompts": [
        {
            "prompt_id": "51",
            "prompt": "Given the head of a graph, return a deep copy (clone) of the graph. Each node in the graph contains a label (int) and a list of its neighbors.",
            "sample_inputs_outputs": [
                {
                    "input": {
                        "node": "{\"label\":1,\"neighbors\":[{\"label\":2,\"neighbors\":[{\"label\":1}],\"random\":null}]}"
                    },
                    "expected_output": [
                        "{\"label\":1,\"neighbors\":[{\"label\":2,\"neighbors\":[{\"label\":1}],\"random\":null}]}"
                    ]
                }
            ]
        }
    ],
    "function_prototype": {
        "function_name": "clone_graph",
        "parameters": [
            {
                "name": "node",
                "type": "Node"
            }
        ],
        "return_values": [
            {
                "type": "Node"
            }
        ]
    },
    "correctness_test_suite": [
        {
            "input": {
                "node": "{\"label\":1,\"neighbors\":[{\"label\":2,\"neighbors\":[{\"label\":1}],\"random\":null}]}"
            },
            "expected_output": [
                "{\"label\":1,\"neighbors\":[{\"label\":2,\"neighbors\":[{\"label\":1}],\"random\":null}]}"
            ]
        }
    ],
    "optimal_solution": "class Node:\n    def __init__(self, val = 0, neighbors = None):\n        self.val = val\n        self.neighbors = neighbors if neighbors is not None else []\n\ndef clone_graph(node: 'Node') -> 'Node':\n    if not node:\n        return node\n\n    visited = {}\n    queue = [node]\n    visited[node] = Node(node.val, [])\n\n    while queue:\n        n = queue.pop(0)\n        for neighbor in n.neighbors:\n            if neighbor not in visited:\n                visited[neighbor] = Node(neighbor.val, [])\n                queue.append(neighbor)\n            visited[n].neighbors.append(visited[neighbor])\n    \n    return visited[node]"
}