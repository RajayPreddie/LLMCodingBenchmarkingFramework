{
    "problem_identifier": "longest_increasing_subsequence",
    "model_identifier": "gpt-4",
    "prompt_identifier": "28",
    "solution_code": "def length_of_lis(nums: List[int]) -> int:\n    if not nums: return 0  # If array is empty\n    dp = [1]*len(nums)  # Initialize dp array with 1\n    for i in range(len(nums)):\n        for j in range(i):\n            if nums[i] > nums[j]:  # If current element > previous element\n                dp[i] = max(dp[i], dp[j]+1)  # Maximum of current subsequence length, or length of subsequence ending with previous element + 1\n    return max(dp)  # Return maximum value in dp array",
    "feedback": null
}